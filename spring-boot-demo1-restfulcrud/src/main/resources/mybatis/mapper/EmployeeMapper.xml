<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hand.springbootdemo1restfulcrud.mapper.EmployeeMapper">
    <sql id="queryFields">
        employee.id,last_name,email,gender,d_id,birth,username,password
    </sql>
    <sql id="insertFields">
        last_name,email,gender,d_id,birth,username,password
    </sql>
    <resultMap id="employeeResultMap" type="com.hand.springbootdemo1restfulcrud.entity.Employee">
        <id column="id" javaType="Integer" property="id"></id>
        <result column="last_name" javaType="String" property="lastName"></result>
        <result column="email" javaType="String" property="email"></result>
        <result column="gender" javaType="Integer" property="gender"></result>
        <result column="birth" javaType="java.util.Date" property="birth"></result>
        <result column="username" javaType="String" property="username"></result>
        <result column="password" javaType="String" property="password"></result>
        <result column="d_id" javaType="Integer" property="dId"></result>
        <!-- 1对1关系 或者 多对1关系 -->
        <association property="department" javaType="Department">
            <id column="id" javaType="Integer" property="id"></id>
            <result column="department_name" javaType="String" property="departmentName"></result>
        </association>
    </resultMap>

    <select id="selectAll" resultMap="employeeResultMap">
        select <include refid="queryFields"></include>,d.id,d.department_name from employee
            inner join department d
            on employee.d_id = d.id
    </select>
    <select id="selectOneById" resultMap="employeeResultMap" parameterType="Integer">
        select <include refid="queryFields"></include> from employee <!--where id=#{id}-->
            inner join department d
            on employee.d_id = d.id
            <if test="id != null and id != 0">
                having employee.id = #{id}
            </if>
    </select>
    <select id="login" parameterType="Employee" resultType="Employee">
        select <include refid="queryFields"/> from employee
        <where>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
    </select>

    <insert id="addOne" parameterType="Employee">
        insert into employee(<include refid="insertFields"/>) values(#{lastName},#{email},#{gender},#{department.id},#{birth},#{username},#{password})
    </insert>

    <update id="update" parameterType="Employee">
        update employee
        <trim prefix="set" suffixOverrides=",">
            <if test="lastName != null and lastName != ''">last_name = #{lastName},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="department.id != null">d_id = #{department.id},</if>
            <if test="username != null and username != ''">username = #{username}</if>
            <if test="birth != null">birth = #{birth}</if>
        </trim>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="deleteById" parameterType="Integer">
        delete from employee where id=#{value}
    </delete>

</mapper>